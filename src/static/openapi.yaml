openapi: "3.0.0"
info:
  title: Mapisto API
  version: "0.1"
servers:
  - url: https://api.mapisto.org
  - url: http://localhost:8080
  - url: http://localhost:7070
tags:
  - name: Map
    description: Load mapisto's maps
  - name: State
    description: "manage states data"
  - name: Video
    description: Maps evolution through time
  - name: Territories
    description: "Read an manage territories' data"
  - name: Land
    description: "Get land coordinates to draw the map"
paths:
  /land:
    get:
      parameters:
        - name: precision_in_km
          in: query
          required: true
          description: The required precision, in kilometers
          schema:
            type: number
          example: 1.0
        - name: min_x
          in: query
          required: true
          description: The left x coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1.0
        - name: max_x
          in: query
          required: true
          description: The right x coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1000.0
        - name: min_y
          in: query
          required: true
          description: The top y coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1.0
        - name: max_y
          in: query
          required: true
          description: The bottom y coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1000.0
      tags:
        - Land
      summary: Returns all lands shapes on the world map
      responses:
        "200":
          description: All land shapes were returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LandShape'
    post:
      tags:
        - Land
      summary: "Add a land shape to the database" 
      requestBody:
        content:
          application/json:
            schema : 
              $ref: '#/components/schemas/LandShape'
      responses:
        "200":
          description: The land shape was correctly added

  /map:
    get:
      tags:
        - Map
      summary: Returns the state's maps
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: datetime
          example: "1918-02-01T15:00:00Z"
        - name: precision_in_km
          in: query
          required: true
          description: The required precision, in kilometers
          schema:
            type: number
          example: 1.0
        - name: min_x
          in: query
          required: true
          description: The left x coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1.0
        - name: max_x
          in: query
          required: true
          description: The right x coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1000.0
        - name: min_y
          in: query
          required: true
          description: The top y coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1.0
        - name: max_y
          in: query
          required: true
          description: The bottom y coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1000.0
      responses:
        "200":
          description: Map was retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  states:
                    type : array
                    items :
                      $ref: "#/components/schemas/State"
                  territories:
                    type: array
                    items:
                      $ref: "#/components/schemas/Territory"

  /map_for_state/{state_id}:
    get:
      tags:
        - Map
      summary: Returns a map of the state (and neighbors) at a specific time 
      parameters:
        - name: state_id
          in: path
          required: true
          description: The id of the state to retrieve
          schema:
            $ref : "#/components/schemas/State/properties/state_id"
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: datetime
          example: "1918-02-01T15:00:00Z"
        - name: pixel_width
          in: query
          required: true
          description: Pixel width of the map (precision will be computed accordingly)
          schema:
            type: number
          example: 1.0
      responses:
        "200":
          description: Map was retrieved
          content:
            application/json:
              schema:
                $ref : "#/components/schemas/Map"
  /gif_map_for_state/{state_id}:
    get:
      tags:
        - Map
      summary: Returns a map of the state (and neighbors) at a specific time 
      parameters:
        - name: state_id
          in: path
          required: true
          description: The id of the state to retrieve
          schema:
            $ref : "#/components/schemas/State/properties/state_id"
        - name: pixel_width
          in: query
          required: true
          description: Pixel width of the map (precision will be computed accordingly)
          schema:
            type: number
          example: 1.0
      responses:
        "200":
          description: Map was retrieved
          content:
            application/json:
              schema:
                type: array
                items :
                  $ref : "#/components/schemas/Map"
  /map_for_territory/{territory_id}:
    get:
      tags:
        - Map
      summary: Returns a map of the territory (and neighbors) at a specific time 
      parameters:
        - name: territory_id
          in: path
          required: true
          description: The id of the territory to retrieve
          schema:
            $ref : "#/components/schemas/Territory/properties/territory_id"
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: datetime
          example: "1918-02-01T15:00:00Z"
        - name: pixel_width
          in: query
          required: true
          description: The pixel size of the map (precision will be computed accordingly)
          schema:
            type: number
          example: 1.0
      responses:
        "200":
          description: Map was retrieved
          content:
            application/json:
              schema :
                $ref : "#/components/schemas/Map"
  /state:
    post:
      tags:
        - State
      summary: Add a sovereign state to the database
      requestBody:
        description: The State to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/State"
      responses:
        "200":
          description: State was correctly added
          content:
            application/json :
              schema :
                type: number
                description: The id of the added state
        "400":
          description: Malformed State
    put:
      tags:
        - State
      summary : Updates the state in body
      parameters:
        - name: absorb_conflicts
          description: If the date is extended and conflicts exist, these conflicts are merged into this state. The conflicts must be inside the provided period
          in: query
          schema :
            type: boolean
            default : False
      requestBody :
        required : true
        content :
          application/json:
            schema :
              $ref : "#/components/schemas/State"
      responses:
        "200" :
          description : "The state was modified"
        "404" : 
          description: state not found

  /state/{state_id}:
    get:
      tags : 
        - State
      summary: Returns a state's information at a certain time by its id, without its territories
      parameters:
        - name : state_id
          in : path
          required: true
          schema :
            $ref : "#/components/schemas/State/properties/state_id"
          example : 1
      responses:
        "200" :
          content:
            application/json :
              schema : 
                $ref : "#/components/schemas/State"
          description: State info retrieved
        "404" :
          description: Territory not found
  /state_search:
    get:
      tags : 
        - State
      summary: "
        Retrieves the states that match the pattern in parameter
        if a period is specified, get only the state which are valid during the whole period
      "
      parameters:
        - name : pattern
          in : query
          required: true
          schema :
            type : string
          example : "fra"
      responses:
        "200" :
          content:
            application/json :
              schema : 
                type : array
                items : 
                  $ref : "#/components/schemas/State"
          description: A list of state retrieved
  /merge_state/{state_id}/into/{sovereign_state_id}:
    put:
      tags:
        - State
      parameters:
        - name : state_id
          in : path
          required: true
          schema :
            $ref : "#/components/schemas/State/properties/state_id"
          example : 1
        - name : sovereign_state_id
          in : path
          required: true
          schema :
            $ref : "#/components/schemas/State/properties/state_id"
          example : 1

      summary: Transfer all the territories of {state_id} to {sovereign_state_id}, preserving their color
      responses:
        "200":
          description: States were merged
          content:
            application/json :
              schema :
                type: number
                description: The id of the sovereign_state
        "400":
          description: Impossible merge, may be a date conflict, the sovereign_state period must include the state period.

  /territory:
    post:
      tags:
        - Territories
      summary: Add a territory
      requestBody:
        description: The territory to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Territory"
      responses:
        "200":
          description: Territory added
          content:
            application/json :
              schema :
                type: number
                description: The id of the added territory
        "400":
          description: Malformed Territory
        "404":
          description: Parent state not found
    put:
      tags:
        - Territories
      summary: Edit a territory
      requestBody:
        description: "The territory to edit.
         May create 1 or 2 other territories if the territory is assigned to another state which lifespan does not include the initial territory. 
         Because the database consistency requires the territory lifespan to be included in it's sovereign state's lifespan"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Territory"
      responses:
        "200":
          description: The id of the edited territory
          content:
            application/json :
              schema :
                type: number
        "400":
          description: Malformed Territory
        "404":
          description: Parent state not found
  /territory/{territory_id}:
    get:
      tags : 
        - Territories
      summary: Returns a territory, with highest precision
      parameters:
        - name : territory_id
          in : path
          required: true
          schema :
            $ref : "#/components/schemas/Territory/properties/territory_id"
          example : 1
      responses:
        "200" :
          content:
            application/json :
              schema : 
                $ref : "#/components/schemas/Territory"
          description: Territory info retrieved
        "404" :
          description: Territory not found

  # /state/{state_id}/absorb/{to_be_absorbed}:
  #   put:
  #     tags:
  #       - State
  #     summary: "
  #     Merge to_be_absorbed state in state_id, reassign all territories
  #     "
  #     parameters :
  #       - name: state_id
  #         in : path
  #         description: The id of the state which whill contains to_be_absorbed
  #         required : true
  #         schema :
  #           $ref : "#/components/schemas/State/properties/state_id"
  #         example : 1
  #       - name: to_be_absorbed
  #         in : path
  #         description: The id of the state that will be absorbed
  #         required : true
  #         schema :
  #           $ref : "#/components/schemas/State/properties/state_id"
  #         example : 2
  #     responses:
  #       "200" :
  #         content:
  #           application/json :
  #             schema : 
  #               type : number
  #         description: The id of the merged state
  #       "404" :
  #         description: Either to_be_absorbed or state_id was not found
  #       "400" : 
  #         description: "
  #           to_be_absorbed has a validity period that lies outside of state_id validity period
  #         "

  # /movie/{state_id}:
  #   get:
  #     tags:
  #       - Video
  #     summary: Retrieve the evolution of a state through its lifespan
  #     parameters: 
  #       - name : state_id
  #         in: path
  #         description: The id of the state which we want to play the evolution
  #         required : true
  #         schema : 
  #           $ref : "#/components/schemas/Territory/properties/territory_id"
  #         example : 79
  #     responses:
  #       "200":
  #         description: The state evolution was correctly retrieved
  #         content:
  #           application/json :
  #             schema :
  #               type: array
  #               items :
  #                 $ref: "#/components/schemas/Scene"
  #       "404" :
  #         description: State not found

components:
  schemas:
    Map : 
      type: object
      properties:
        states:
          type : array
          items :
            $ref: "#/components/schemas/State"
        territories:
          type: array
          items:
            $ref: "#/components/schemas/Territory"
        bounding_box:
          $ref: "#/components/schemas/BoundingBox"
        date : 
          type: string
          description: "The date of the map"
          format: datetime
          example: "1918-01-01T00:00:00Z"

    State:
      type: object
      properties:
        state_id:
          type: integer
          example: 1
        validity_start:
          description: the start of the total period of the state
          type: string
          format: datetime
          example: "1918-01-01T00:00:00Z"
        validity_end:
          description: the end of the total period of the state
          type: string
          format: datetime
          example: "1919-01-01T00:00:00Z"
        representations : 
          type: array
          items :
            $ref : "#/components/schemas/StateRepresentation"
        bounding_box:
          description: The bounding box for all of the state's territories
          $ref : "#/components/schemas/BoundingBox"
    StateRepresentation:
        description: A representation for the state at a given period
        type: object
        properties:
          state_name_id :
            type : integer
          validity_start:
            type : string
            format : datetime
            example : "1918-01-01T00:00:00Z"
          validity_end : 
            type : string
            format: datetime
            example : "1919-01-01T00:00:00Z"
          name:
            type: string
            example: Austria-Hungary
          color:
            type: string
            example: "#FF0000"
    Territory:
      description: "Representation of a territory belonging to a state"
      type: object
      properties:
        territory_id:
          type: integer
          example: 1
        name : 
          description : An optional name for the territory (if not the state's name is used)
          type: string
        color :
          description: A color if the state's color should be overriden
          type: string
        d_path:
          type: string
          example: "M150 0 L75 200 L225 200 Z"
        validity_start:
          type: string
          format: datetime
          example: "1918-01-01T00:00:00Z"
        validity_end:
          type: string
          format: datetime
          example: "1919-01-01T00:00:00Z"
        bounding_box:
          description: The territory's bounding box
          $ref : "#/components/schemas/BoundingBox"
        state_id : 
          description: The state to which it belongs
          type : integer
    LandShape:
      description: Representation of a land map 
      type: object
      properties:
        land_id:
          type : integer
          example: 1
        d_path:
          type: string
          example: "M400 0 L75 200 L225 200 Z"
    BoundingBox:
      description: A bounding box for the geometric shape in mapisto
      properties:
        x:
          type: integer
          example: 0
        y:
          type: integer
          example: 0
        width:
          type: integer
          example: 2000
        height:
          type: integer
          example: 1000
    Scene:
      type: object
      description: a scene to be played in mapisto videos
      properties:
        validity_start:
          type: string
          format: datetime
          example: "1918-01-01T00:00:00Z"
        validity_end:
          type: string
          format: datetime
          example: "1919-01-01T00:00:00Z"
        map_evolution:
          type: array
          items: 
            $ref : "#/components/schemas/State"
          description: The list of states that took part within the scene lifespan
        bounding_box:
          description: The bounding box in which to play the scene
          type: string
          example: "#FF0000"

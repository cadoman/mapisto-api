openapi: "3.0.0"
info:
  title: Mapisto API
  version: "0.1"
servers:
  - url: https://api.mapisto.org
  - url: "http://localhost:8080"
  - url: "http://localhost:5000"
tags:
  - name: Map
    description: Load mapisto's maps
  - name: State
    description: "manage states data"
  - name: Territories
    description: "Read an manage territories' data"
  - name: Land
    description: "Get land coordinates to draw the map"
paths:
  /land:
    get:
      parameters:
        - name: precision_in_km
          in: query
          required: true
          description: The required precision, in kilometers
          schema:
            type: number
          example: 1.0
        - name: min_x
          in: query
          required: true
          description: The left x coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1.0
        - name: max_x
          in: query
          required: true
          description: The right x coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1000.0
        - name: min_y
          in: query
          required: true
          description: The top y coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1.0
        - name: max_y
          in: query
          required: true
          description: The bottom y coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1000.0
      tags:
        - Land
      summary: Returns all lands shapes on the world map
      responses:
        "200":
          description: All land shapes were returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LandShape'
    post:
      tags:
        - Land
      summary: "Add a land shape to the database" 
      requestBody:
        content:
          application/json:
            schema : 
              $ref: '#/components/schemas/LandShape'
      responses:
        "200":
          description: The land shape was correctly added

  /map:
    get:
      tags:
        - Map
      summary: Returns the state's maps
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: datetime
          example: "1918-02-01T15:00:00Z"
        - name: precision_in_km
          in: query
          required: true
          description: The required precision, in kilometers
          schema:
            type: number
          example: 1.0
        - name: min_x
          in: query
          required: true
          description: The left x coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1.0
        - name: max_x
          in: query
          required: true
          description: The right x coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1000.0
        - name: min_y
          in: query
          required: true
          description: The top y coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1.0
        - name: max_y
          in: query
          required: true
          description: The bottom y coordinate of the viewbox in which the territories are requested
          schema:
            type: number
          example: 1000.0

      responses:
        "200":
          description: All states returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/State"
  /state:
    post:
      tags:
        - State
      summary: Add state information in the database for a given time perioed
      parameters:
        - name: validity_start
          in: query
          required: true
          schema:
            type: string
            format: datetime
          example: "1918-01-01T00:00:00Z"
        - name: validity_end
          in: query
          required: true
          schema:
            type: string
            format: datetime
          example: "1919-01-01T00:00:00Z"
      requestBody:
        description: The State to add
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/State"
      responses:
        "200":
          description: State was correctly added
        "400":
          description: Bad Request
    put:
      tags:
        - State
      parameters:
        - name: validity_start
          in: query
          required: true
          schema:
            type: string
            format: datetime
          example: "1918-01-01T00:00:00Z"
        - name: validity_end
          in: query
          required: true
          schema:
            type: string
            format: datetime
          example: "1919-01-01T00:00:00Z"
      summary : If a match (id, validity_start, validity_end) is found in db, changes the name of the state
      requestBody :
        description: The state to which the name can be modified
        required : true
        content :
          application/json:
            schema :
              $ref : "#/components/schemas/State"
      responses:
        "200" :
          description : "The state was modified"
        "404" : 
          description: tuple (state_id, validity_start, validity_end) not found

  # /state_from_territory/{territory_id}:
  #   get:
  #     tags : 
  #       - State
  #     summary: Returns a state's information from a territory id
  #     parameters:
  #       - name : territory_id
  #         in : path
  #         required: true
  #         schema :
  #           $ref : "#/components/schemas/Territory/properties/territory_id"
  #         example : 1
  #       - name: date
  #         in: query
  #         required: true
  #         schema:
  #           type: string
  #           format: datetime
  #         example: "1918-02-01T15:00:00Z"
  #     responses:
  #       "200" :
  #         content:
  #           application/json :
  #             schema : 
  #               $ref : "#/components/schemas/State"
  #         description: State info retrieved
  #       "404" :
  #         description: Territory not found
  /state/{state_id}:
    get:
      tags : 
        - State
      summary: Returns a state's information at a certain time by its id, without its territories
      parameters:
        - name : state_id
          in : path
          required: true
          schema :
            $ref : "#/components/schemas/State/properties/state_id"
          example : 1
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: datetime
          example: "1918-02-01T15:00:00Z"
      responses:
        "200" :
          content:
            application/json :
              schema : 
                $ref : "#/components/schemas/State"
          description: State info retrieved
        "404" :
          description: Territory not found
  /state/{state_id}/concurrent_states:
    get:
      tags:
        - State
      summary: "
      Returns, for a state, represented by (state_id), and a possible extend period, all (state_id, state_names) which have a similar name
      Supposes every state has only 1 state representation
      "
      parameters :
        - name: state_id
          in : path
          description: The id of the state to be extended
          required : true
          schema :
            $ref : "#/components/schemas/State/properties/state_id"
          example : 1
        - name: newStart
          in: query
          required: true
          description: The start of the new period to consider
          schema:
            type: string
            format: datetime
          example: "1918-01-01T00:00:00Z"
        - name: newEnd
          in: query
          required: true
          description: The end of the new period to consider
          schema:
            type: string
            format: datetime
          example: "1920-01-01T00:00:00Z"
      responses:
        "200" :
          content:
            application/json :
              schema : 
                type : array
                items : 
                  $ref : "#/components/schemas/State"
          description: A list of the state representations that will conflict or could be linked
        "404" :
          description: The state state_id was not found at the date date
  /state/{state_id}/extend:
    put:
      tags:
        - State
      summary: "
      Extends a state period to the new period provided
      Automatically merges it with the states which have the same name within the period. And remove them
      Also merges the state which are provided in parameter, and remove them
      "
      parameters :
        - name: state_id
          in : path
          description: The id of the state to extend
          required : true
          schema :
            $ref : "#/components/schemas/State/properties/state_id"
          example : 1
        - name: newStart
          in: query
          required: true
          description: The start of the new period to consider
          schema:
            type: string
            format: datetime
          example: "1918-01-01T00:00:00Z"
        - name: newEnd
          in: query
          required: true
          description: The end of the new period to consider
          schema:
            type: string
            format: datetime
          example: "1920-01-01T00:00:00Z"
      requestBody :
        description: A list of states to be merged with the extended state
        content:
          application/json:
            schema :
              type: array
              items : 
                type : number
      responses:
        "200" :
          content:
            application/json :
              schema : 
                type : array
                items : 
                  $ref : "#/components/schemas/State"
          description: A list of the state representations that will conflict or could be linked
        "404" :
          description: The state state_id was not found within the period
        "400" : 
          description: "
          The period provided does not include the existing one. Cannot extend
          One of the states to be merged has a period not included in the provided period
          "


components:
  schemas:
    State:
      type: object
      properties:
        state_id:
          type: integer
          example: 1
        validity_start:
          type: string
          format: datetime
          example: "1918-01-01T00:00:00Z"
        validity_end:
          type: string
          format: datetime
          example: "1919-01-01T00:00:00Z"
        name:
          type: string
          example: Austria-Hungary
        color:
          type: string
          example: "#FF0000"
        bounding_box:
          description: The bounding box for all of the state's territories
          $ref : "#/components/schemas/BoundingBox"
        territories:
          description: "List of territories included in the state"
          type: array
          items:
            $ref: "#components/schemas/Territory"
    Territory:
      description: "Representation of a territory belonging to a state"
      type: object
      properties:
        territory_id:
          type: integer
          example: 1
        d_path:
          type: string
          example: "M150 0 L75 200 L225 200 Z"
        validity_start:
          type: string
          format: datetime
          example: "1918-01-01T00:00:00Z"
        validity_end:
          type: string
          format: datetime
          example: "1919-01-01T00:00:00Z"
    LandShape:
      description: Representation of a land map 
      type: object
      properties:
        land_id:
          type : integer
          example: 1
        d_path:
          type: string
          example: "M400 0 L75 200 L225 200 Z"
    BoundingBox:
      description: A bounding box for the geometric shape in mapisto
      properties:
        x:
          type: integer
          example: 0
        y:
          type: integer
          example: 0
        width:
          type: integer
          example: 2000
        height:
          type: integer
          example: 1000